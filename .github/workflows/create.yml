name: create

on:
  workflow_call:
    inputs:
      VM_SIZE:
        type: string
      LOCATION:
        type: string
      STORAGE_ACCOUNT_NAME:
        type: string
      STORAGE_RESOURCE_GROUP_NAME:
        type: string
    secrets:
      ARM_CLIENT_ID:
        required: true
      ARM_CLIENT_SECRET:
        required: true
      ARM_TENANT_ID:
        required: true
      ARM_SUBSCRIPTION_ID:
        required: true
      GH_TOKEN:
        description: Token with admin repo privilege
        required: false
      GH_APP_ID:
        description: App id with admin privilege
        required: false
      GH_PRIVATE_KEY:
        description: App private key with admin privilege
        required: false
    outputs:
      uniq_label:
        value: ${{ jobs.create.outputs.uniq_label }}

# permissions:
#   id-token: write
#   contents: read

jobs:
  create:
    runs-on: ubuntu-latest
    outputs:
      uniq_label: ${{ steps.uniqlabel.outputs.label }}
    steps:
      - name: Test secrets 1
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GH_APP_ID: ${{ secrets.GH_APP_ID }}
          GH_PRIVATE_KEY: ${{ secrets.GH_PRIVATE_KEY }}
        if: ${{ env.GH_TOKEN == '' && (env.GH_APP_ID == '' || env.GH_PRIVATE_KEY == '') }}
        run: echo Error [GH_TOKEN] or [GH_APP_ID, GH_PRIVATE_KEY] are not defined  >> /dev/stderr; false

      - name: Test secrets 2
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GH_APP_ID: ${{ secrets.GH_APP_ID }}
          GH_PRIVATE_KEY: ${{ secrets.GH_PRIVATE_KEY }}
        if: ${{ env.GH_TOKEN != '' && ( env.GH_APP_ID != '' || env.GH_PRIVATE_KEY != '' ) }}
        run: echo Error [GH_TOKEN] and [GH_APP_ID, GH_PRIVATE_KEY] are defined  >> /dev/stderr; false

      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: Jason-Clark-FG/azure-github-runner
          ref: main

      - name: Generate ssh key
        run: ssh-keygen -b 2048 -f ~/.ssh/id_rsa -N ""

      - name: Config ssh
        run: touch ~/.ssh/known_hosts

      - name: gen uniq label
        id: uniqlabel
        run: 'echo label=$(shuf -er -n8  {a..z} | paste -sd "") >> "$GITHUB_OUTPUT"'

      - name: upload ssh key
        uses: actions/upload-artifact@v4
        with:
          name: ssh
          path: ~/.ssh/
          retention-days: 1

      - name: login to azure
        uses: Azure/login@v2
        with:
          creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'

      - name: Create VM using GH_TOKEN
        if: ${{ env.GH_TOKEN != '' }}
        env:
          GITHUB_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          RUN_ID: ${{ github.run_id }}
          VM_SIZE: ${{ inputs.VM_SIZE }}
          LOCATION: ${{ inputs.LOCATION }}
          STORAGE_ACCOUNT_NAME: ${{ inputs.STORAGE_ACCOUNT_NAME }}
          STORAGE_RESOURCE_GROUPNAME: ${{ inputs.STORAGE_RESOURCE_GROUP_NAME }}
          UNIQ_LABEL: ${{ steps.uniqlabel.outputs.label }}
        run: ./main.sh | jq -r 'keys[] as $k | "\($k)=\(.[$k])"' >> "$GITHUB_OUTPUT"

      - uses: actions/create-github-app-token@v1
        id: app-token
        if: ${{ failure() && env.GH_TOKEN == '' }}
        with:
          app-id: ${{ secrets.GH_APP_ID }}
          private-key: ${{ secrets.GH_PRIVATE_KEY }}

      - name: run script 2
        if: ${{ steps.app-token.outcome == 'success' }}
        env:
          GITHUB_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
          RUN_ID: ${{ github.run_id }}
          VM_SIZE: ${{ inputs.VM_SIZE }}
          LOCATION: ${{ inputs.LOCATION }}
          UNIQ_LABEL: ${{ steps.uniqlabel.outputs.label }}
        run: ./main.sh | jq -r 'keys[] as $k | "\($k)=\(.[$k])"' >> "$GITHUB_OUTPUT"

